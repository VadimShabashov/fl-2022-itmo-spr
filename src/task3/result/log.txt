
Rules: 

S->[['M', 'E']]
E->[['+', 'M', 'E'], ['#']]
M->[['B', 'R']]
R->[['*', 'B', 'R'], ['#']]
B->[['(', 'S', ')'], ['0'], ['-', 'N', 'P'], ['N', 'P']]
P->[['0', 'P'], ['2', 'P'], ['3', 'P'], ['4', 'P'], ['5', 'P'], ['6', 'P'], ['7', 'P'], ['8', 'P'], ['9', 'P'], ['#']]
N->[['1'], ['2'], ['3'], ['4'], ['5'], ['6'], ['7'], ['8'], ['9']]

After elimination of left recursion:

S->[['M', 'E']]
E->[['+', 'M', 'E'], ['#']]
M->[['B', 'R']]
R->[['*', 'B', 'R'], ['#']]
B->[['(', 'S', ')'], ['0'], ['-', 'N', 'P'], ['N', 'P']]
P->[['0', 'P'], ['2', 'P'], ['3', 'P'], ['4', 'P'], ['5', 'P'], ['6', 'P'], ['7', 'P'], ['8', 'P'], ['9', 'P'], ['#']]
N->[['1'], ['2'], ['3'], ['4'], ['5'], ['6'], ['7'], ['8'], ['9']]

After left factoring:

S->[['M', 'E']]
E->[['+', 'M', 'E'], ['#']]
M->[['B', 'R']]
R->[['*', 'B', 'R'], ['#']]
B->[['(', 'S', ')'], ['0'], ['-', 'N', 'P'], ['N', 'P']]
P->[['0', 'P'], ['2', 'P'], ['3', 'P'], ['4', 'P'], ['5', 'P'], ['6', 'P'], ['7', 'P'], ['8', 'P'], ['9', 'P'], ['#']]
N->[['1'], ['2'], ['3'], ['4'], ['5'], ['6'], ['7'], ['8'], ['9']]

Calculated firsts: 
first(S) => {'4', '2', '-', '7', '6', '1', '5', '8', '(', '3', '0', '9'}
first(E) => {'+', '#'}
first(M) => {'4', '2', '-', '7', '6', '1', '5', '8', '(', '3', '0', '9'}
first(R) => {'*', '#'}
first(B) => {'4', '2', '-', '7', '6', '1', '5', '8', '(', '3', '0', '9'}
first(P) => {'4', '2', '7', '6', '5', '8', '3', '0', '#', '9'}
first(N) => {'4', '2', '7', '6', '5', '1', '8', '3', '9'}

Calculated follows: 
follow(S) => {')', '$'}
follow(E) => {')', '$'}
follow(M) => {'+', ')', '$'}
follow(R) => {'+', ')', '$'}
follow(B) => {'*', '+', ')', '$'}
follow(P) => {'*', '+', ')', '$'}
follow(N) => {'4', '*', '2', '$', '7', '6', '5', '8', '+', '3', '0', ')', '9'}

Firsts and Follow Result table

Non-T      FIRST                                                             FOLLOW                                                                
S          {'4', '2', '-', '7', '6', '1', '5', '8', '(', '3', '0', '9'}      {')', '$'}                                                            
E          {'+', '#'}                                                        {')', '$'}                                                            
M          {'4', '2', '-', '7', '6', '1', '5', '8', '(', '3', '0', '9'}      {'+', ')', '$'}                                                       
R          {'*', '#'}                                                        {'+', ')', '$'}                                                       
B          {'4', '2', '-', '7', '6', '1', '5', '8', '(', '3', '0', '9'}      {'*', '+', ')', '$'}                                                  
P          {'4', '2', '7', '6', '5', '8', '3', '0', '#', '9'}                {'*', '+', ')', '$'}                                                  
N          {'4', '2', '7', '6', '5', '1', '8', '3', '9'}                     {'4', '*', '2', '$', '7', '6', '5', '8', '+', '3', '0', ')', '9'}     

Generated parsing table:

           1           2           3           4           5           6           7           8           9           0           (           )           *           -           +           $
S       S->M E      S->M E      S->M E      S->M E      S->M E      S->M E      S->M E      S->M E      S->M E      S->M E      S->M E                              S->M E                        
E                                                                                                                                             E->#                            E->+ M E        E->#
M       M->B R      M->B R      M->B R      M->B R      M->B R      M->B R      M->B R      M->B R      M->B R      M->B R      M->B R                              M->B R                        
R                                                                                                                                             R->#    R->* B R                    R->#        R->#
B       B->N P      B->N P      B->N P      B->N P      B->N P      B->N P      B->N P      B->N P      B->N P        B->0    B->( S )                            B->- N P                        
P                   P->2 P      P->3 P      P->4 P      P->5 P      P->6 P      P->7 P      P->8 P      P->9 P      P->0 P                    P->#        P->#                    P->#        P->#
N         N->1        N->2        N->3        N->4        N->5        N->6        N->7        N->8        N->9                                                                                    

Validate String => ( 1 + 1 ) * 2 + ( - 6 )

              Buffer                Stack               Action
$ ) 6 - ( + 2 * ) 1 + 1 (                  S $          T[S][(] = S->M E
$ ) 6 - ( + 2 * ) 1 + 1 (                M E $          T[M][(] = M->B R
$ ) 6 - ( + 2 * ) 1 + 1 (              B R E $        T[B][(] = B->( S )
$ ) 6 - ( + 2 * ) 1 + 1 (          ( S ) R E $            Matched:(
$ ) 6 - ( + 2 * ) 1 + 1            S ) R E $          T[S][1] = S->M E
$ ) 6 - ( + 2 * ) 1 + 1          M E ) R E $          T[M][1] = M->B R
$ ) 6 - ( + 2 * ) 1 + 1        B R E ) R E $          T[B][1] = B->N P
$ ) 6 - ( + 2 * ) 1 + 1      N P R E ) R E $            T[N][1] = N->1
$ ) 6 - ( + 2 * ) 1 + 1      1 P R E ) R E $            Matched:1
$ ) 6 - ( + 2 * ) 1 +        P R E ) R E $            T[P][+] = P->#
$ ) 6 - ( + 2 * ) 1 +          R E ) R E $            T[R][+] = R->#
$ ) 6 - ( + 2 * ) 1 +            E ) R E $        T[E][+] = E->+ M E
$ ) 6 - ( + 2 * ) 1 +        + M E ) R E $            Matched:+
 $ ) 6 - ( + 2 * ) 1          M E ) R E $          T[M][1] = M->B R
 $ ) 6 - ( + 2 * ) 1        B R E ) R E $          T[B][1] = B->N P
 $ ) 6 - ( + 2 * ) 1      N P R E ) R E $            T[N][1] = N->1
 $ ) 6 - ( + 2 * ) 1      1 P R E ) R E $            Matched:1
   $ ) 6 - ( + 2 * )        P R E ) R E $            T[P][)] = P->#
   $ ) 6 - ( + 2 * )          R E ) R E $            T[R][)] = R->#
   $ ) 6 - ( + 2 * )            E ) R E $            T[E][)] = E->#
   $ ) 6 - ( + 2 * )              ) R E $            Matched:)
     $ ) 6 - ( + 2 *                R E $        T[R][*] = R->* B R
     $ ) 6 - ( + 2 *            * B R E $            Matched:*
       $ ) 6 - ( + 2              B R E $          T[B][2] = B->N P
       $ ) 6 - ( + 2            N P R E $            T[N][2] = N->2
       $ ) 6 - ( + 2            2 P R E $            Matched:2
         $ ) 6 - ( +              P R E $            T[P][+] = P->#
         $ ) 6 - ( +                R E $            T[R][+] = R->#
         $ ) 6 - ( +                  E $        T[E][+] = E->+ M E
         $ ) 6 - ( +              + M E $            Matched:+
           $ ) 6 - (                M E $          T[M][(] = M->B R
           $ ) 6 - (              B R E $        T[B][(] = B->( S )
           $ ) 6 - (          ( S ) R E $            Matched:(
             $ ) 6 -            S ) R E $          T[S][-] = S->M E
             $ ) 6 -          M E ) R E $          T[M][-] = M->B R
             $ ) 6 -        B R E ) R E $        T[B][-] = B->- N P
             $ ) 6 -    - N P R E ) R E $            Matched:-
               $ ) 6      N P R E ) R E $            T[N][6] = N->6
               $ ) 6      6 P R E ) R E $            Matched:6
                 $ )        P R E ) R E $            T[P][)] = P->#
                 $ )          R E ) R E $            T[R][)] = R->#
                 $ )            E ) R E $            T[E][)] = E->#
                 $ )              ) R E $            Matched:)
                   $                R E $            T[R][$] = R->#
                   $                  E $            T[E][$] = E->#
                   $                    $                Valid

Valid String!
